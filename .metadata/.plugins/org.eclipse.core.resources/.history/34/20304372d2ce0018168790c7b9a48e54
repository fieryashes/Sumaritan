package CamHacks;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

import com.google.cloud.vision.v1.AnnotateImageRequest;
import com.google.cloud.vision.v1.AnnotateImageResponse;
import com.google.cloud.vision.v1.BatchAnnotateImagesResponse;
import com.google.cloud.vision.v1.EntityAnnotation;
import com.google.cloud.vision.v1.Feature;
import com.google.cloud.vision.v1.Feature.Type;
import com.google.cloud.vision.v1.Image;
import com.google.cloud.vision.v1.ImageAnnotatorClient;
import com.google.protobuf.ByteString;
import com.google.protobuf.Descriptors.FieldDescriptor;

public class PictureToText {
	public static void main(String [] args){
	    PrintStream ps;
		try {
			ps = new PrintStream(new File("C:/Users/rrreg/Desktop/Pictures/9/IMG_6025.PNG"));
			detectText("C:/Users/rrreg/Desktop/Pictures/9/IMG_6025.PNG",ps);
			
		} catch (Exception e) {
			e.printStackTrace();
		}

	}
	public static void detectText(String filePath, PrintStream out) throws Exception, IOException {
		 // Instantiates a client
	    try (ImageAnnotatorClient vision = ImageAnnotatorClient.create()) {

	      // The path to the image file to annotate
	      String fileName = "./resources/wakeupcat.jpg";

	      // Reads the image file into memory
	      Path path = Paths.get(fileName);
	      byte[] data = Files.readAllBytes(path);
	      ByteString imgBytes = ByteString.copyFrom(data);

	      // Builds the image annotation request
	      List<AnnotateImageRequest> requests = new ArrayList<>();
	      Image img = Image.newBuilder().setContent(imgBytes).build();
	      Feature feat = Feature.newBuilder().setType(Type.LABEL_DETECTION).build();
	      AnnotateImageRequest request = AnnotateImageRequest.newBuilder()
	          .addFeatures(feat)
	          .setImage(img)
	          .build();
	      requests.add(request);

	      // Performs label detection on the image file
	      BatchAnnotateImagesResponse response = vision.batchAnnotateImages(requests);
	      List<AnnotateImageResponse> responses = response.getResponsesList();

	      for (AnnotateImageResponse res : responses) {
	        if (res.hasError()) {
	          System.out.printf("Error: %s\n", res.getError().getMessage());
	          return;
	        }

	        for (EntityAnnotation annotation : res.getLabelAnnotationsList()) {
	         for(FieldDescriptor k: annotation.getAllFields().keySet())
	              System.out.printf("%s : %s\n", k, annotation.getAllFields().get(k).toString());
	        }
	      }
	    }
	  }
	}